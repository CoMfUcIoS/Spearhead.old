!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
4NT_args	mobileApp/android/gradlew.bat	/^:4NT_args$/;"	l
APP_BASE_NAME	mobileApp/android/gradlew.bat	/^set APP_BASE_NAME=%~n0$/;"	v
APP_HOME	mobileApp/android/gradlew.bat	/^set APP_HOME=%DIRNAME%$/;"	v
CLASSPATH	mobileApp/android/gradlew.bat	/^set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar$/;"	v
CLASS_IN	chimera/src/avahiAlias.js	/^        TTL        : 60,$/;"	p
CMD_LINE_ARGS	mobileApp/android/gradlew.bat	/^set CMD_LINE_ARGS=$/;"	v
CMD_LINE_ARGS	mobileApp/android/gradlew.bat	/^set CMD_LINE_ARGS=%*$/;"	v
CMD_LINE_ARGS	mobileApp/android/gradlew.bat	/^set CMD_LINE_ARGS=%\$$/;"	v
Canvas	medusa/overview.html	/^	function Canvas(cls, container) {$/;"	f
DEFAULT_JVM_OPTS	mobileApp/android/gradlew.bat	/^set DEFAULT_JVM_OPTS=$/;"	v
DIRNAME	mobileApp/android/gradlew.bat	/^if "%DIRNAME%" == "" set DIRNAME=.$/;"	v
DIRNAME	mobileApp/android/gradlew.bat	/^set DIRNAME=%~dp0$/;"	v
JAVA_EXE	mobileApp/android/gradlew.bat	/^set JAVA_EXE=%JAVA_HOME%\/bin\/java.exe$/;"	v
JAVA_EXE	mobileApp/android/gradlew.bat	/^set JAVA_EXE=java.exe$/;"	v
JAVA_HOME	mobileApp/android/gradlew.bat	/^set JAVA_HOME=%JAVA_HOME:"=%$/;"	v
MainActivity	mobileApp/android/app/src/main/java/com/awesomeproject/MainActivity.java	/^public class MainActivity extends ReactActivity {$/;"	c
MainApplication	mobileApp/android/app/src/main/java/com/awesomeproject/MainApplication.java	/^public class MainApplication extends Application implements ReactApplication {$/;"	c
Plot	medusa/overview.html	/^    function Plot(placeholder, data_, options_, plugins) {$/;"	f
TTL	chimera/src/avahiAlias.js	/^      Settings = {$/;"	p
TYPE_CNAME	chimera/src/avahiAlias.js	/^        CLASS_IN   : 0x01,$/;"	p
_SKIP	mobileApp/android/gradlew.bat	/^set _SKIP=2$/;"	v
_changeData	chimera/src/services/$sim.js	/^  function _changeData({ el, interval, module, type }) {$/;"	f
_changeKey	chimera/src/services/$sim.js	/^  function _changeKey({ el, key, keyType }) {$/;"	f
_endPointCb./1.0/trendv2/getTrends	chimera/src/api.js	/^  _endPointCb = {$/;"	m
_generateData	chimera/src/services/$sim.js	/^  function _generateData(module, intervalsRange) {$/;"	f
_jsonData	chimera/src/services/$sim.js	/^  function _jsonData(folder, modules) {$/;"	f
_makeBuild	webApp/webpack.config.js	/^function _makeBuild() {$/;"	f
_setApiEndPoints	chimera/src/api.js	/^  function _setApiEndPoints(endPoints) {$/;"	f
_startRealTimeFor	chimera/src/services/$sim.js	/^  function _startRealTimeFor(module, intervalsRange) {$/;"	f
adjustLayoutForThingsStickingOut	medusa/overview.html	/^        function adjustLayoutForThingsStickingOut() {$/;"	f
allAxes	medusa/overview.html	/^        function allAxes() {$/;"	f
allocateAxisBoxFirstPhase	medusa/overview.html	/^        function allocateAxisBoxFirstPhase(axis) {$/;"	f
allocateAxisBoxSecondPhase	medusa/overview.html	/^        function allocateAxisBoxSecondPhase(axis) {$/;"	f
allowedSSLDomains	config.json	/^  "allowedSSLDomains": [$/;"	f
approveDomains	cerberus/index.js	/^function approveDomains(opts, certs, cb) {$/;"	f
author	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^    "author" : "xcode"$/;"	f
author	package.json	/^  "author": "Ioannis Karasavvaidis",$/;"	f
author	webApp/package.json	/^  "author": "Luciano Mammino",$/;"	f
avahiPath	config.json	/^  "avahiPath": "\/usr\/sbin\/avahi-daemon",$/;"	f
axisNumber	medusa/overview.html	/^        function axisNumber(obj, coord) {$/;"	f
axisToCanvasCoords	medusa/overview.html	/^        function axisToCanvasCoords(pos) {$/;"	f
babel-cli	package.json	/^    "babel-cli": "^6.11.4",$/;"	f
babel-cli	webApp/package.json	/^    "babel-cli": "^6.11.4",$/;"	f
babel-core	package.json	/^    "babel-core": "^6.13.2",$/;"	f
babel-core	webApp/package.json	/^    "babel-core": "^6.13.2",$/;"	f
babel-eslint	package.json	/^    "babel-eslint": "^7.1.1",$/;"	f
babel-jest	mobileApp/package.json	/^    "babel-jest": "16.0.0",$/;"	f
babel-loader	package.json	/^    "babel-loader": "^6.2.5",$/;"	f
babel-loader	webApp/package.json	/^    "babel-loader": "^6.2.5",$/;"	f
babel-node-debug	package.json	/^    "babel-node-debug": "^2.0.0",$/;"	f
babel-plugin-inferno	package.json	/^    "babel-plugin-inferno": "^1.7.0",$/;"	f
babel-plugin-react-html-attrs	webApp/package.json	/^    "babel-plugin-react-html-attrs": "^2.0.0",$/;"	f
babel-preset-es2015	package.json	/^    "babel-preset-es2015": "^6.13.2",$/;"	f
babel-preset-es2015	webApp/package.json	/^    "babel-preset-es2015": "^6.13.2",$/;"	f
babel-preset-react	webApp/package.json	/^    "babel-preset-react": "^6.11.1",$/;"	f
babel-preset-react-hmre	webApp/package.json	/^    "babel-preset-react-hmre": "^1.1.1",$/;"	f
babel-preset-react-native	mobileApp/package.json	/^    "babel-preset-react-native": "1.9.0",$/;"	f
babel-preset-stage-0	package.json	/^    "babel-preset-stage-0": "^6.22.0",$/;"	f
bin	package.json	/^  "bin": {$/;"	f
bindEvents	medusa/overview.html	/^        function bindEvents() {$/;"	f
bindEvents	medusa/overview.html	/^        function bindEvents(plot, eventHolder) {$/;"	f
build	webApp/package.json	/^    "build": "NODE_ENV=production node_modules\/.bin\/webpack -p"$/;"	f
buildDocs	package.json	/^    "buildDocs": "yuidoc .\/ -o docs",$/;"	f
canvasToAxisCoords	medusa/overview.html	/^        function canvasToAxisCoords(pos) {$/;"	f
cerberus	config.json	/^    "cerberus": 1233,$/;"	f
cerberus	config.json	/^    "cerberus": 80,$/;"	f
cerberus	package.json	/^    "cerberus": "authbind --deep pm2 start .\/cerberus\/index.js --name cerberus --interpreter '.\/node_modules\/babel-cli\/bin\/babel-node.js' --watch true",$/;"	f
charybdis	config.json	/^    "charybdis": 1233,$/;"	f
charybdis	config.json	/^    "charybdis": 3000$/;"	f
charybdis	package.json	/^    "charybdis": "npm run charybdis:build && npm run charybdis:run",$/;"	f
charybdis:build	package.json	/^    "charybdis:build": "cd charybdis\/ && NODE_ENV=production webpack -p && cd ..\/",$/;"	f
charybdis:dev	package.json	/^    "charybdis:dev": "npm run charybdis:dev:build && babel-node --inspect .\/charybdis\/src\/server.js",$/;"	f
charybdis:dev:build	package.json	/^    "charybdis:dev:build": "cd charybdis\/ && webpack --progress && cd ..\/",$/;"	f
charybdis:run	package.json	/^    "charybdis:run": "NODE_ENV=production pm2 start .\/charybdis\/src\/server.js --name charybdis --interpreter '.\/node_modules\/babel-cli\/bin\/babel-node.js' --watch true",$/;"	f
charybdis:single	package.json	/^    "charybdis:single": "http-server .\/charybdis\/src\/static",$/;"	f
clear	medusa/overview.html	/^			function clear() {$/;"	f
com.awesomeproject	mobileApp/android/app/src/main/java/com/awesomeproject/MainActivity.java	/^package com.awesomeproject;$/;"	p
com.awesomeproject	mobileApp/android/app/src/main/java/com/awesomeproject/MainApplication.java	/^package com.awesomeproject;$/;"	p
combine	medusa/overview.html	/^		function combine(data) {$/;"	f
const	charybdis/src/routes.js	/^import Layout from '.\/components\/Layout';$/;"	f
const	chimera/src/api.js	/^\/**$/;"	f
const	chimera/src/avahiAlias.js	/^import { toASCII } from 'punycode';$/;"	f
const	chimera/src/clients.js	/^import * as _storage from 'node-persist';$/;"	f
const	chimera/src/config.js	/^import path from 'path';$/;"	f
const	chimera/src/events.js	/^import { EventEmitter } from 'events';$/;"	f
const	chimera/src/keymetrics.js	/^import pmx from 'pmx';$/;"	f
const	chimera/src/queue.js	/^import $ from 'jquery-deferred';$/;"	f
const	chimera/src/server.js	/^import bodyParser  from 'body-parser';$/;"	c
const	chimera/src/services/$mySQL.js	/^import $    from 'jquery-deferred';$/;"	f
const	chimera/src/services/$sim.js	/^import casual from 'casual';$/;"	f
const	chimera/src/storage.js	/^import * as _storage from 'node-persist';$/;"	f
const	chimera/src/watch.js	/^import $ from 'jquery-deferred';$/;"	f
const.B	webApp/src/components/Medal.js	/^  'S': 'Silver',$/;"	p
const.G	webApp/src/components/Medal.js	/^const typeMap = {$/;"	p
const.S	webApp/src/components/Medal.js	/^  'G': 'Gold',$/;"	p
const._arrayOf	chimera/src/services/$sim.js	/^  function _arrayOf(generator, times) {$/;"	f
const._createTag	chimera/src/services/$sim.js	/^  function _createTag({ tagId, tagTitle }) {$/;"	f
const._encode	chimera/src/avahiAlias.js	/^  function _encode(name) {$/;"	f
const._encodeRdata	chimera/src/avahiAlias.js	/^  function _encodeRdata(rdata) {$/;"	f
const._generateHistoricalCount	chimera/src/services/$sim.js	/^  function _generateHistoricalCount({ search }) {$/;"	f
const._generateTrafficData	chimera/src/services/$sim.js	/^  function _generateTrafficData(module) {$/;"	f
const._getNetworkIP	chimera/src/services/$sim.js	/^  function _getNetworkIP(callback) {$/;"	f
const._getNextId	chimera/src/api.js	/^  function _getNextId(array) {$/;"	f
const._initializeIntervals	chimera/src/services/$sim.js	/^  function _initializeIntervals() {$/;"	f
const._prepareCreateTag	chimera/src/api.js	/^  function _prepareCreateTag({ request, respond }) {$/;"	f
const._publish	chimera/src/avahiAlias.js	/^  function _publish(cname, whole) {$/;"	f
const._startHistorgram	chimera/src/keymetrics.js	/^  function _startHistorgram() {$/;"	f
const._stringToByteArray	chimera/src/avahiAlias.js	/^  function _stringToByteArray(data) {$/;"	f
const._throwError	chimera/src/avahiAlias.js	/^  function _throwError({ error, message }) {$/;"	f
const._updateTag	chimera/src/services/$sim.js	/^  function _updateTag({ tagId, tagTitle }) {$/;"	f
const._waitLastPromise	chimera/src/queue.js	/^  function _waitLastPromise() {$/;"	f
const.cu	webApp/src/components/Flag.js	/^const data = {$/;"	p
css-loader	package.json	/^    "css-loader": "^0.26.1",$/;"	f
dbus-native	package.json	/^    "dbus-native": "^0.2.0",$/;"	f
debug	config.json	/^  "debug": true,$/;"	f
default	config.json	/^    "default": 3000,$/;"	f
dependencies	mobileApp/package.json	/^  "dependencies": {$/;"	f
dependencies	package.json	/^  "dependencies": {$/;"	f
dependencies	webApp/package.json	/^  "dependencies": {$/;"	f
description	package.json	/^  "description": "Ecosystem of the gods",$/;"	f
description	webApp/package.json	/^  "description": "Simple application to showcase how to achieve universal rendering and routing with React and Express.",$/;"	f
devDependencies	mobileApp/package.json	/^  "devDependencies": {$/;"	f
devDependencies	package.json	/^  "devDependencies": {$/;"	f
devDependencies	webApp/package.json	/^  "devDependencies": {$/;"	f
devtool	webApp/webpack.config.js	/^    common = {$/;"	p
die	mobileApp/android/gradlew	/^die ( ) {$/;"	f
draw	medusa/overview.html	/^		function draw(plot, newCtx) {$/;"	f
draw	medusa/overview.html	/^        function draw() {$/;"	f
drawAxisLabels	medusa/overview.html	/^        function drawAxisLabels() {$/;"	f
drawBackground	medusa/overview.html	/^        function drawBackground() {$/;"	f
drawBar	medusa/overview.html	/^        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {$/;"	f
drawBarHighlight	medusa/overview.html	/^        function drawBarHighlight(series, point) {$/;"	f
drawDonutHole	medusa/overview.html	/^		function drawDonutHole(layer) {$/;"	f
drawGrid	medusa/overview.html	/^        function drawGrid() {$/;"	f
drawHighlight	medusa/overview.html	/^			function drawHighlight(series) {$/;"	f
drawLabel	medusa/overview.html	/^					function drawLabel(slice, startAngle, index) {$/;"	f
drawLabels	medusa/overview.html	/^				function drawLabels() {$/;"	f
drawOverlay	medusa/overview.html	/^		function drawOverlay(plot, octx) {$/;"	f
drawOverlay	medusa/overview.html	/^        function drawOverlay() {$/;"	f
drawPie	medusa/overview.html	/^			function drawPie() {$/;"	f
drawPointHighlight	medusa/overview.html	/^        function drawPointHighlight(series, point) {$/;"	f
drawSeries	medusa/overview.html	/^        function drawSeries(series) {$/;"	f
drawSeriesBars	medusa/overview.html	/^        function drawSeriesBars(series) {$/;"	f
drawSeriesLines	medusa/overview.html	/^        function drawSeriesLines(series) {$/;"	f
drawSeriesPoints	medusa/overview.html	/^        function drawSeriesPoints(series) {$/;"	f
drawShadow	medusa/overview.html	/^			function drawShadow() {$/;"	f
drawSlice	medusa/overview.html	/^				function drawSlice(angle, color, fill) {$/;"	f
ejs	package.json	/^    "ejs": "^2.5.1",$/;"	f
ejs	webApp/package.json	/^    "ejs": "^2.5.1",$/;"	f
el.traffic	chimera/src/services/$sim.js	/^    el = {$/;"	p
end	mobileApp/android/gradlew.bat	/^:end$/;"	l
entry.created	chimera/src/services/$sim.js	/^        entry = {$/;"	p
eslint	package.json	/^    "eslint": "^3.14.1",$/;"	f
eslint-plugin-inferno	package.json	/^    "eslint-plugin-inferno": "^6.9.2",$/;"	f
eslint-plugin-react	package.json	/^    "eslint-plugin-react": "^6.9.0",$/;"	f
execute	mobileApp/android/gradlew.bat	/^:execute$/;"	l
executeHooks	medusa/overview.html	/^        function executeHooks(hook, args) {$/;"	f
export.color	charybdis/src/components/Gauge.js	/^  propTypes = {$/;"	p
exports.babel	webApp/wpUtils.js	/^};$/;"	f
exports.clean	webApp/wpUtils.js	/^};$/;"	f
exports.copyStatic	webApp/wpUtils.js	/^};$/;"	f
exports.createIndex	webApp/wpUtils.js	/^};$/;"	f
exports.createIntegrateIndex	webApp/wpUtils.js	/^};$/;"	f
exports.devServer	webApp/wpUtils.js	/^};$/;"	f
exports.extractBundle	webApp/wpUtils.js	/^};$/;"	f
exports.extractCSS	webApp/wpUtils.js	/^};$/;"	f
exports.lint	webApp/wpUtils.js	/^};$/;"	f
exports.log	webApp/wpUtils.js	/^    debug              = (process.env.NODE_ENV !== 'production');$/;"	f
exports.minify	webApp/wpUtils.js	/^};$/;"	f
exports.purifyCSS	webApp/wpUtils.js	/^};$/;"	f
exports.setCmdLineVars	webApp/wpUtils.js	/^};$/;"	f
exports.setFreeVariable	webApp/wpUtils.js	/^};$/;"	f
exports.setupCSS	webApp/wpUtils.js	/^};$/;"	f
express	package.json	/^    "express": "^4.14.0",$/;"	f
express	webApp/package.json	/^    "express": "^4.14.0",$/;"	f
extract-text-webpack-plugin	package.json	/^    "extract-text-webpack-plugin": "^1.0.1",$/;"	f
extractRange	medusa/overview.html	/^        function extractRange(ranges, coord) {$/;"	f
fail	mobileApp/android/gradlew.bat	/^:fail$/;"	l
fillInSeriesOptions	medusa/overview.html	/^        function fillInSeriesOptions() {$/;"	f
findJavaFromJavaHome	mobileApp/android/gradlew.bat	/^:findJavaFromJavaHome$/;"	l
findNearbyItem	medusa/overview.html	/^        function findNearbyItem(mouseX, mouseY, seriesFilter) {$/;"	f
findNearbySlice	medusa/overview.html	/^		function findNearbySlice(mouseX, mouseY) {$/;"	f
floorInBase	medusa/overview.html	/^    function floorInBase(n, base) {$/;"	f
getColorOrGradient	medusa/overview.html	/^        function getColorOrGradient(spec, bottom, top, defaultColor) {$/;"	f
getFillStyle	medusa/overview.html	/^        function getFillStyle(filloptions, seriesColor, bottom, top) {$/;"	f
getMainComponentName	mobileApp/android/app/src/main/java/com/awesomeproject/MainActivity.java	/^    protected String getMainComponentName() {$/;"	m	class:MainActivity
getOrCreateAxis	medusa/overview.html	/^        function getOrCreateAxis(axes, number) {$/;"	f
getReactNativeHost	mobileApp/android/app/src/main/java/com/awesomeproject/MainApplication.java	/^  public ReactNativeHost getReactNativeHost() {$/;"	m	class:MainApplication
highlight	medusa/overview.html	/^		function highlight(s, auto) {$/;"	f
highlight	medusa/overview.html	/^        function highlight(s, point, auto) {$/;"	f
history	package.json	/^    "history": "^4.5.1",$/;"	f
http-proxy	package.json	/^    "http-proxy": "^1.16.2",$/;"	f
http-server	package.json	/^    "http-server": "^0.9.0",$/;"	f
http-server	webApp/package.json	/^    "http-server": "^0.9.0",$/;"	f
hydra	config.json	/^    "hydra": 4730,$/;"	f
hydra	package.json	/^    "hydra": "pm2 start .\/hydra\/index.js --name hydra --interpreter '.\/node_modules\/babel-cli\/bin\/babel-node.js' --watch true",$/;"	f
identity	medusa/overview.html	/^            function identity(x) { return x; }$/;"	f
idiom	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	f
images	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^  "images" : [$/;"	f
indexOfHighlight	medusa/overview.html	/^		function indexOfHighlight(s) {$/;"	f
indexOfHighlight	medusa/overview.html	/^        function indexOfHighlight(s, p) {$/;"	f
inferno	package.json	/^    "inferno": "^1.2.2",$/;"	f
inferno-component	package.json	/^    "inferno-component": "^1.2.2",$/;"	f
inferno-router	package.json	/^    "inferno-router": "^1.2.2",$/;"	f
inferno-server	package.json	/^    "inferno-server": "^1.2.2",$/;"	f
info	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^  "info" : {$/;"	f
init	medusa/overview.html	/^	function init(plot) {$/;"	f
init	medusa/overview.html	/^    function init(plot) {$/;"	f
init	mobileApp/android/gradlew.bat	/^:init$/;"	l
initPlugins	medusa/overview.html	/^        function initPlugins() {$/;"	f
insertLegend	medusa/overview.html	/^        function insertLegend() {$/;"	f
isPointInPoly	medusa/overview.html	/^		function isPointInPoly(poly, pt) {$/;"	f
jest	mobileApp/package.json	/^    "jest": "16.0.2",$/;"	f
jest	mobileApp/package.json	/^  "jest": {$/;"	f
jest-react-native	mobileApp/package.json	/^    "jest-react-native": "16.1.0",$/;"	f
jquery-deferred	package.json	/^    "jquery-deferred": "^0.3.1",$/;"	f
kill	package.json	/^    "kill": "pm2 kill",$/;"	f
let.backgroundImage	webApp/src/components/AthletePage.js	/^    let headerStyle = { backgroundImage : `url(\/img\/${athlete.cover})` };$/;"	p
let.uuid	cerberus/index.js	/^let client = {$/;"	p
let.uuid	medusa/index.js	/^let client = {$/;"	p
letsencrypt-express	package.json	/^    "letsencrypt-express": "^2.0.6",$/;"	f
license	package.json	/^  "license": "CC-BY-NC-ND-4.0",$/;"	f
license	webApp/package.json	/^  "license": "MIT",$/;"	f
list	package.json	/^    "list": "pm2 l",$/;"	f
lodash	package.json	/^    "lodash": "^4.17.4",$/;"	f
mReactNativeHost	mobileApp/android/app/src/main/java/com/awesomeproject/MainApplication.java	/^  private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {$/;"	f	class:MainApplication	file:
main	package.json	/^  "main": "spearhead",$/;"	f
main	webApp/package.json	/^  "main": "src\/server.js",$/;"	f
mainEnd	mobileApp/android/gradlew.bat	/^:mainEnd$/;"	l
measureTickLabels	medusa/overview.html	/^        function measureTickLabels(axis) {$/;"	f
medusa	config.json	/^    "medusa": 1233,$/;"	f
medusa	package.json	/^    "medusa": "pm2 start .\/medusa\/index.js --name medusa --interpreter '.\/node_modules\/babel-cli\/bin\/babel-node.js' --watch true",$/;"	f
monitor	package.json	/^    "monitor": "^0.6.10",$/;"	f
name	mobileApp/package.json	/^  "name": "AwesomeProject",$/;"	f
name	package.json	/^  "name": "spearhead",$/;"	f
name	webApp/package.json	/^  "name": "judo-heroes",$/;"	f
node-sass	package.json	/^    "node-sass": "^4.4.0",$/;"	f
nodemon	package.json	/^    "nodemon": "^1.11.0",$/;"	f
obj	chimera/src/queue.js	/^      const expectedOptions = {$/;"	p
omega	mobileApp/android/gradlew.bat	/^:omega$/;"	l
onClick	medusa/overview.html	/^		function onClick(e) {$/;"	f
onClick	medusa/overview.html	/^        function onClick(e) {$/;"	f
onMouseLeave	medusa/overview.html	/^        function onMouseLeave(e) {$/;"	f
onMouseMove	medusa/overview.html	/^		function onMouseMove(e) {$/;"	f
onMouseMove	medusa/overview.html	/^        function onMouseMove(e) {$/;"	f
onResize	medusa/overview.html	/^        function onResize() {$/;"	f
parseData	medusa/overview.html	/^        function parseData(d) {$/;"	f
parseOptions	medusa/overview.html	/^        function parseOptions(opts) {$/;"	f
path	chimera/src/server.js	/^      const _cert = {$/;"	p
plotBars	medusa/overview.html	/^            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {$/;"	f
plotLine	medusa/overview.html	/^            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {$/;"	f
plotLineArea	medusa/overview.html	/^            function plotLineArea(datapoints, axisx, axisy) {$/;"	f
plotPoints	medusa/overview.html	/^            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {$/;"	f
pmx	package.json	/^    "pmx": "^1.0.1",$/;"	f
ports	config.json	/^  "ports": {$/;"	f
preset	mobileApp/package.json	/^    "preset": "jest-react-native"$/;"	f
private	mobileApp/package.json	/^  "private": true,$/;"	f
processData	medusa/overview.html	/^        function processData() {$/;"	f
processDatapoints	medusa/overview.html	/^		function processDatapoints(plot, series, datapoints) {$/;"	f
react	mobileApp/package.json	/^    "react": "15.3.2",$/;"	f
react	package.json	/^    "react": "^15.4.2",$/;"	f
react	webApp/package.json	/^    "react": "^15.3.1",$/;"	f
react-dom	package.json	/^    "react-dom": "^15.4.2",$/;"	f
react-dom	webApp/package.json	/^    "react-dom": "^15.3.1",$/;"	f
react-hot-loader	webApp/package.json	/^    "react-hot-loader": "^1.3.0",$/;"	f
react-native	mobileApp/package.json	/^    "react-native": "0.36.1"$/;"	f
react-page-context	package.json	/^    "react-page-context": "0.0.5",$/;"	f
react-router	package.json	/^    "react-router": "^2.8.1",$/;"	f
react-router	webApp/package.json	/^    "react-router": "^2.6.1"$/;"	f
react-test-renderer	mobileApp/package.json	/^    "react-test-renderer": "15.3.2"$/;"	f
repository	webApp/package.json	/^  "repository": "git@github.com:lmammino\/judo-heroes.git",$/;"	f
request	package.json	/^    "request": "^2.79.0",$/;"	f
response.results	chimera/src/api.js	/^        response = {$/;"	p
response.success	chimera/src/api.js	/^          results : data,$/;"	p
sass-loader	package.json	/^    "sass-loader": "^4.1.1",$/;"	f
sassLoader	charybdis/webpack.config.js	/^    config = {$/;"	p
scale	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	f
scale	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "3x"$/;"	f
scripts	mobileApp/package.json	/^  "scripts": {$/;"	f
scripts	package.json	/^  "scripts": {$/;"	f
scripts	webApp/package.json	/^  "scripts": {$/;"	f
setData	medusa/overview.html	/^        function setData(d) {$/;"	f
setRange	medusa/overview.html	/^        function setRange(axis) {$/;"	f
setTicks	medusa/overview.html	/^        function setTicks(axis) {$/;"	f
setTransformationHelpers	medusa/overview.html	/^        function setTransformationHelpers(axis) {$/;"	f
setupCanvases	medusa/overview.html	/^        function setupCanvases() {$/;"	f
setupGrid	medusa/overview.html	/^        function setupGrid() {$/;"	f
setupTickGeneration	medusa/overview.html	/^        function setupTickGeneration(axis) {$/;"	f
shutdown	medusa/overview.html	/^        function shutdown() {$/;"	f
shutdown	medusa/overview.html	/^        function shutdown(plot, eventHolder) {$/;"	f
size	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "29x29",$/;"	f
size	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "40x40",$/;"	f
size	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "60x60",$/;"	f
snapRangeToTicks	medusa/overview.html	/^        function snapRangeToTicks(axis, ticks) {$/;"	f
socket.io	package.json	/^    "socket.io": "^1.7.2",$/;"	f
socket.io-client	package.json	/^    "socket.io-client": "^1.7.2",$/;"	f
spdy	package.json	/^    "spdy": "^3.4.4",$/;"	f
spearhead	package.json	/^    "spearhead": "spearhead.js"$/;"	f
splitJvmOpts	mobileApp/android/gradlew	/^function splitJvmOpts() {$/;"	f
start	mobileApp/package.json	/^    "start": "node node_modules\/react-native\/local-cli\/cli.js start",$/;"	f
start	package.json	/^    "start": "npm run hydra && npm run cerberus && npm run medusa && npm run charybdis"$/;"	f
start	webApp/package.json	/^    "start": "NODE_ENV=production node_modules\/.bin\/babel-node --presets 'react,es2015' src\/server.js",$/;"	f
start-dev	webApp/package.json	/^    "start-dev": "npm run start-dev-hmr",$/;"	f
start-dev-hmr	webApp/package.json	/^    "start-dev-hmr": "node_modules\/.bin\/webpack-dev-server --progress --inline --hot",$/;"	f
start-dev-single-page	webApp/package.json	/^    "start-dev-single-page": "node_modules\/.bin\/http-server src\/static",$/;"	f
state.percentage	charybdis/src/components/Gauge.js	/^    this.state = {$/;"	p
state.time	charybdis/src/components/simpleClock.js	/^    this.state = {$/;"	p
style-loader	package.json	/^    "style-loader": "^0.13.1",$/;"	f
test	mobileApp/package.json	/^    "test": "jest"$/;"	f
trends.results	chimera/src/api.js	/^        trends = {$/;"	p
triggerClickHoverEvent	medusa/overview.html	/^		function triggerClickHoverEvent(eventname, e) {$/;"	f
triggerClickHoverEvent	medusa/overview.html	/^        function triggerClickHoverEvent(eventname, event, seriesFilter) {$/;"	f
triggerRedrawOverlay	medusa/overview.html	/^        function triggerRedrawOverlay() {$/;"	f
unhighlight	medusa/overview.html	/^		function unhighlight(s) {$/;"	f
unhighlight	medusa/overview.html	/^        function unhighlight(s, point) {$/;"	f
updateAxis	medusa/overview.html	/^            function updateAxis(axis, min, max) {$/;"	f
uuid	package.json	/^    "uuid": "^3.0.1",$/;"	f
version	mobileApp/ios/AwesomeProject/Images.xcassets/AppIcon.appiconset/Contents.json	/^    "version" : 1,$/;"	f
version	mobileApp/package.json	/^  "version": "0.0.1",$/;"	f
version	package.json	/^  "version": "1.0.1"$/;"	f
version	webApp/package.json	/^  "version": "1.0.0",$/;"	f
vhosts	config.json	/^  "vhosts": {$/;"	f
warn	mobileApp/android/gradlew	/^warn ( ) {$/;"	f
webpack	package.json	/^    "webpack": "^1.13.2",$/;"	f
webpack	webApp/package.json	/^    "webpack": "^1.13.2",$/;"	f
webpack-dev-server	package.json	/^    "webpack-dev-server": "^1.14.1",$/;"	f
webpack-dev-server	webApp/package.json	/^    "webpack-dev-server": "^1.14.1"$/;"	f
webpack-merge	package.json	/^    "webpack-merge": "^2.6.1",$/;"	f
websocket	package.json	/^    "websocket": "^1.0.24"$/;"	f
win9xME_args	mobileApp/android/gradlew.bat	/^:win9xME_args$/;"	l
win9xME_args_slurp	mobileApp/android/gradlew.bat	/^:win9xME_args_slurp$/;"	l
window	mobileApp/ios/AwesomeProject/AppDelegate.h	/^@property (nonatomic, strong) UIWindow *window;$/;"	v
ws	config.json	/^    "ws": 4730$/;"	f
yuidocjs	package.json	/^    "yuidocjs": "^0.10.2"$/;"	f
